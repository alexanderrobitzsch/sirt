//// File Name: RcppExports.cpp
//// File Version: 0.39
// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;
using namespace arma;

// eigenvaluesDsirt
Rcpp::List eigenvaluesDsirt(Rcpp::NumericMatrix Xr, int D, int maxit, double conv);
RcppExport SEXP _sirt_eigenvaluesDsirt(SEXP XrSEXP, SEXP DSEXP, SEXP maxitSEXP, SEXP convSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Xr(XrSEXP);
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    rcpp_result_gen = Rcpp::wrap(eigenvaluesDsirt(Xr, D, maxit, conv));
    return rcpp_result_gen;
END_RCPP
}
// firsteigenvalsirt2
Rcpp::List firsteigenvalsirt2(arma::mat X, int maxit, double conv, double K);
RcppExport SEXP _sirt_firsteigenvalsirt2(SEXP XSEXP, SEXP maxitSEXP, SEXP convSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(firsteigenvalsirt2(X, maxit, conv, K));
    return rcpp_result_gen;
END_RCPP
}
// parameters_jackknife
Rcpp::List parameters_jackknife(Rcpp::NumericMatrix PARS);
RcppExport SEXP _sirt_parameters_jackknife(SEXP PARSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type PARS(PARSSEXP);
    rcpp_result_gen = Rcpp::wrap(parameters_jackknife(PARS));
    return rcpp_result_gen;
END_RCPP
}
// evm_aux
Rcpp::List evm_aux(arma::mat B, int I, int powD, int maxit, double conv, double K);
RcppExport SEXP _sirt_evm_aux(SEXP BSEXP, SEXP ISEXP, SEXP powDSEXP, SEXP maxitSEXP, SEXP convSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    Rcpp::traits::input_parameter< int >::type powD(powDSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(evm_aux(B, I, powD, maxit, conv, K));
    return rcpp_result_gen;
END_RCPP
}
// choppin_rowaveraging
Rcpp::NumericVector choppin_rowaveraging(arma::mat B, int I, double priorweight);
RcppExport SEXP _sirt_choppin_rowaveraging(SEXP BSEXP, SEXP ISEXP, SEXP priorweightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    Rcpp::traits::input_parameter< double >::type priorweight(priorweightSEXP);
    rcpp_result_gen = Rcpp::wrap(choppin_rowaveraging(B, I, priorweight));
    return rcpp_result_gen;
END_RCPP
}
// evm_comp_matrix_poly
Rcpp::List evm_comp_matrix_poly(Rcpp::NumericMatrix dat, Rcpp::NumericMatrix dat_resp, Rcpp::NumericVector weights, int JJ, Rcpp::NumericVector jackunits, int powD, int progress_, Rcpp::NumericMatrix row_index, Rcpp::NumericMatrix col_index);
RcppExport SEXP _sirt_evm_comp_matrix_poly(SEXP datSEXP, SEXP dat_respSEXP, SEXP weightsSEXP, SEXP JJSEXP, SEXP jackunitsSEXP, SEXP powDSEXP, SEXP progress_SEXP, SEXP row_indexSEXP, SEXP col_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat_resp(dat_respSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< int >::type JJ(JJSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type jackunits(jackunitsSEXP);
    Rcpp::traits::input_parameter< int >::type powD(powDSEXP);
    Rcpp::traits::input_parameter< int >::type progress_(progress_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type row_index(row_indexSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type col_index(col_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(evm_comp_matrix_poly(dat, dat_resp, weights, JJ, jackunits, powD, progress_, row_index, col_index));
    return rcpp_result_gen;
END_RCPP
}
// gooijer_csn_table
Rcpp::List gooijer_csn_table(Rcpp::NumericMatrix dat, Rcpp::NumericMatrix dat_perm, int RR, int NS, int progress, Rcpp::NumericVector progress_vec, Rcpp::NumericMatrix score_index);
RcppExport SEXP _sirt_gooijer_csn_table(SEXP datSEXP, SEXP dat_permSEXP, SEXP RRSEXP, SEXP NSSEXP, SEXP progressSEXP, SEXP progress_vecSEXP, SEXP score_indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat_perm(dat_permSEXP);
    Rcpp::traits::input_parameter< int >::type RR(RRSEXP);
    Rcpp::traits::input_parameter< int >::type NS(NSSEXP);
    Rcpp::traits::input_parameter< int >::type progress(progressSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type progress_vec(progress_vecSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type score_index(score_indexSEXP);
    rcpp_result_gen = Rcpp::wrap(gooijer_csn_table(dat, dat_perm, RR, NS, progress, progress_vec, score_index));
    return rcpp_result_gen;
END_RCPP
}
// isop_tests_C
Rcpp::List isop_tests_C(Rcpp::NumericMatrix dat, Rcpp::NumericMatrix dat_resp, Rcpp::NumericVector weights, Rcpp::NumericVector jackunits, int JJ);
RcppExport SEXP _sirt_isop_tests_C(SEXP datSEXP, SEXP dat_respSEXP, SEXP weightsSEXP, SEXP jackunitsSEXP, SEXP JJSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat_resp(dat_respSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type jackunits(jackunitsSEXP);
    Rcpp::traits::input_parameter< int >::type JJ(JJSEXP);
    rcpp_result_gen = Rcpp::wrap(isop_tests_C(dat, dat_resp, weights, jackunits, JJ));
    return rcpp_result_gen;
END_RCPP
}
// ia_optim_lambda
Rcpp::NumericVector ia_optim_lambda(Rcpp::NumericMatrix lambda, Rcpp::NumericVector psi0, Rcpp::NumericVector psi0b, double align_scale, double align_pow, Rcpp::NumericMatrix wgt, double eps, Rcpp::NumericMatrix group_combis);
RcppExport SEXP _sirt_ia_optim_lambda(SEXP lambdaSEXP, SEXP psi0SEXP, SEXP psi0bSEXP, SEXP align_scaleSEXP, SEXP align_powSEXP, SEXP wgtSEXP, SEXP epsSEXP, SEXP group_combisSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type psi0(psi0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type psi0b(psi0bSEXP);
    Rcpp::traits::input_parameter< double >::type align_scale(align_scaleSEXP);
    Rcpp::traits::input_parameter< double >::type align_pow(align_powSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type wgt(wgtSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type group_combis(group_combisSEXP);
    rcpp_result_gen = Rcpp::wrap(ia_optim_lambda(lambda, psi0, psi0b, align_scale, align_pow, wgt, eps, group_combis));
    return rcpp_result_gen;
END_RCPP
}
// ia_optim_nu
Rcpp::NumericVector ia_optim_nu(Rcpp::NumericMatrix lambda, Rcpp::NumericMatrix nu, Rcpp::NumericVector psi0_, Rcpp::NumericVector psi0b, Rcpp::NumericVector alpha0, Rcpp::NumericVector alpha0b, double align_scale, double align_pow, Rcpp::NumericMatrix wgt, double eps, Rcpp::NumericMatrix group_combis);
RcppExport SEXP _sirt_ia_optim_nu(SEXP lambdaSEXP, SEXP nuSEXP, SEXP psi0_SEXP, SEXP psi0bSEXP, SEXP alpha0SEXP, SEXP alpha0bSEXP, SEXP align_scaleSEXP, SEXP align_powSEXP, SEXP wgtSEXP, SEXP epsSEXP, SEXP group_combisSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type nu(nuSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type psi0_(psi0_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type psi0b(psi0bSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha0b(alpha0bSEXP);
    Rcpp::traits::input_parameter< double >::type align_scale(align_scaleSEXP);
    Rcpp::traits::input_parameter< double >::type align_pow(align_powSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type wgt(wgtSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type group_combis(group_combisSEXP);
    rcpp_result_gen = Rcpp::wrap(ia_optim_nu(lambda, nu, psi0_, psi0b, alpha0, alpha0b, align_scale, align_pow, wgt, eps, group_combis));
    return rcpp_result_gen;
END_RCPP
}
// interval_index_C
Rcpp::NumericVector interval_index_C(Rcpp::NumericMatrix MATR, Rcpp::NumericVector RN);
RcppExport SEXP _sirt_interval_index_C(SEXP MATRSEXP, SEXP RNSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type MATR(MATRSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type RN(RNSEXP);
    rcpp_result_gen = Rcpp::wrap(interval_index_C(MATR, RN));
    return rcpp_result_gen;
END_RCPP
}
// rowCumsums2_source
Rcpp::NumericMatrix rowCumsums2_source(Rcpp::NumericMatrix input);
RcppExport SEXP _sirt_rowCumsums2_source(SEXP inputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type input(inputSEXP);
    rcpp_result_gen = Rcpp::wrap(rowCumsums2_source(input));
    return rcpp_result_gen;
END_RCPP
}
// rowKSmallest_C
Rcpp::List rowKSmallest_C(Rcpp::NumericMatrix MATR, Rcpp::IntegerVector KK1, Rcpp::NumericMatrix INDEXMATR, Rcpp::NumericMatrix RNMATR);
RcppExport SEXP _sirt_rowKSmallest_C(SEXP MATRSEXP, SEXP KK1SEXP, SEXP INDEXMATRSEXP, SEXP RNMATRSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type MATR(MATRSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type KK1(KK1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type INDEXMATR(INDEXMATRSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type RNMATR(RNMATRSEXP);
    rcpp_result_gen = Rcpp::wrap(rowKSmallest_C(MATR, KK1, INDEXMATR, RNMATR));
    return rcpp_result_gen;
END_RCPP
}
// rowMaxsCPP_source
Rcpp::List rowMaxsCPP_source(Rcpp::NumericMatrix MATR);
RcppExport SEXP _sirt_rowMaxsCPP_source(SEXP MATRSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type MATR(MATRSEXP);
    rcpp_result_gen = Rcpp::wrap(rowMaxsCPP_source(MATR));
    return rcpp_result_gen;
END_RCPP
}
// rowmins2_bundle_C
Rcpp::NumericMatrix rowmins2_bundle_C(Rcpp::NumericMatrix m1, Rcpp::NumericVector v1);
RcppExport SEXP _sirt_rowmins2_bundle_C(SEXP m1SEXP, SEXP v1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type m1(m1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type v1(v1SEXP);
    rcpp_result_gen = Rcpp::wrap(rowmins2_bundle_C(m1, v1));
    return rcpp_result_gen;
END_RCPP
}
// calc_copula_itemcluster_C
Rcpp::List calc_copula_itemcluster_C(Rcpp::NumericVector DD, Rcpp::NumericMatrix res);
RcppExport SEXP _sirt_calc_copula_itemcluster_C(SEXP DDSEXP, SEXP resSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type DD(DDSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type res(resSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_copula_itemcluster_C(DD, res));
    return rcpp_result_gen;
END_RCPP
}
// md_pattern_csource
Rcpp::List md_pattern_csource(Rcpp::NumericMatrix dat);
RcppExport SEXP _sirt_md_pattern_csource(SEXP datSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    rcpp_result_gen = Rcpp::wrap(md_pattern_csource(dat));
    return rcpp_result_gen;
END_RCPP
}
// monoreg_rowwise_Cpp
Rcpp::NumericMatrix monoreg_rowwise_Cpp(Rcpp::NumericMatrix YM, Rcpp::NumericMatrix WM);
RcppExport SEXP _sirt_monoreg_rowwise_Cpp(SEXP YMSEXP, SEXP WMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type YM(YMSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type WM(WMSEXP);
    rcpp_result_gen = Rcpp::wrap(monoreg_rowwise_Cpp(YM, WM));
    return rcpp_result_gen;
END_RCPP
}
// mle_pcm_group_C
Rcpp::List mle_pcm_group_C(Rcpp::NumericMatrix dat, Rcpp::NumericMatrix dat_resp, Rcpp::NumericMatrix groupM, Rcpp::NumericMatrix b, Rcpp::NumericVector a, Rcpp::NumericVector maxK, Rcpp::NumericVector theta0, double conv, int maxiter);
RcppExport SEXP _sirt_mle_pcm_group_C(SEXP datSEXP, SEXP dat_respSEXP, SEXP groupMSEXP, SEXP bSEXP, SEXP aSEXP, SEXP maxKSEXP, SEXP theta0SEXP, SEXP convSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat_resp(dat_respSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type groupM(groupMSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type maxK(maxKSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(mle_pcm_group_C(dat, dat_resp, groupM, b, a, maxK, theta0, conv, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// mle_pcm_C
Rcpp::List mle_pcm_C(Rcpp::NumericMatrix dat, Rcpp::NumericMatrix dat_resp, Rcpp::NumericMatrix b, Rcpp::NumericVector a, Rcpp::NumericVector maxK, Rcpp::NumericVector theta0, double conv, int maxiter);
RcppExport SEXP _sirt_mle_pcm_C(SEXP datSEXP, SEXP dat_respSEXP, SEXP bSEXP, SEXP aSEXP, SEXP maxKSEXP, SEXP theta0SEXP, SEXP convSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat_resp(dat_respSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type maxK(maxKSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type theta0(theta0SEXP);
    Rcpp::traits::input_parameter< double >::type conv(convSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(mle_pcm_C(dat, dat_resp, b, a, maxK, theta0, conv, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// noharm_compute_dj
Rcpp::NumericVector noharm_compute_dj(Rcpp::NumericMatrix Fval, Rcpp::NumericMatrix Pval, int I, int D);
RcppExport SEXP _sirt_noharm_compute_dj(SEXP FvalSEXP, SEXP PvalSEXP, SEXP ISEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Fval(FvalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Pval(PvalSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(noharm_compute_dj(Fval, Pval, I, D));
    return rcpp_result_gen;
END_RCPP
}
// noharm_compute_ej
Rcpp::List noharm_compute_ej(Rcpp::NumericVector dj, int I);
RcppExport SEXP _sirt_noharm_compute_ej(SEXP djSEXP, SEXP ISEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type dj(djSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    rcpp_result_gen = Rcpp::wrap(noharm_compute_ej(dj, I));
    return rcpp_result_gen;
END_RCPP
}
// noharm_compute_vjk
Rcpp::List noharm_compute_vjk(Rcpp::NumericMatrix b0jk, Rcpp::NumericMatrix b1jk, Rcpp::NumericMatrix b2jk, Rcpp::NumericMatrix b3jk, Rcpp::NumericMatrix ej_ek, int I, int modtype);
RcppExport SEXP _sirt_noharm_compute_vjk(SEXP b0jkSEXP, SEXP b1jkSEXP, SEXP b2jkSEXP, SEXP b3jkSEXP, SEXP ej_ekSEXP, SEXP ISEXP, SEXP modtypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b0jk(b0jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b1jk(b1jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b2jk(b2jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b3jk(b3jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type ej_ek(ej_ekSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    Rcpp::traits::input_parameter< int >::type modtype(modtypeSEXP);
    rcpp_result_gen = Rcpp::wrap(noharm_compute_vjk(b0jk, b1jk, b2jk, b3jk, ej_ek, I, modtype));
    return rcpp_result_gen;
END_RCPP
}
// noharm_compute_gammajk
Rcpp::List noharm_compute_gammajk(Rcpp::NumericMatrix Fval, Rcpp::NumericMatrix Pval, Rcpp::NumericMatrix Psival, int I, int D);
RcppExport SEXP _sirt_noharm_compute_gammajk(SEXP FvalSEXP, SEXP PvalSEXP, SEXP PsivalSEXP, SEXP ISEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Fval(FvalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Pval(PvalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Psival(PsivalSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(noharm_compute_gammajk(Fval, Pval, Psival, I, D));
    return rcpp_result_gen;
END_RCPP
}
// noharm_compute_pdfk
Rcpp::List noharm_compute_pdfk(Rcpp::NumericMatrix Fval, Rcpp::NumericMatrix Pval, int I, int D);
RcppExport SEXP _sirt_noharm_compute_pdfk(SEXP FvalSEXP, SEXP PvalSEXP, SEXP ISEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Fval(FvalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Pval(PvalSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(noharm_compute_pdfk(Fval, Pval, I, D));
    return rcpp_result_gen;
END_RCPP
}
// noharm_estFcpp
Rcpp::List noharm_estFcpp(Rcpp::NumericMatrix Fval, Rcpp::NumericMatrix Pval, Rcpp::NumericMatrix Fpatt, Rcpp::NumericMatrix Ppatt, int I, int D, Rcpp::NumericMatrix b0jk, Rcpp::NumericMatrix b1jk, Rcpp::NumericMatrix b2jk, Rcpp::NumericMatrix b3jk, Rcpp::NumericMatrix wgtm, Rcpp::NumericMatrix pm, Rcpp::NumericMatrix Psival, Rcpp::NumericMatrix Psipatt, double maxincrement, int modtype);
RcppExport SEXP _sirt_noharm_estFcpp(SEXP FvalSEXP, SEXP PvalSEXP, SEXP FpattSEXP, SEXP PpattSEXP, SEXP ISEXP, SEXP DSEXP, SEXP b0jkSEXP, SEXP b1jkSEXP, SEXP b2jkSEXP, SEXP b3jkSEXP, SEXP wgtmSEXP, SEXP pmSEXP, SEXP PsivalSEXP, SEXP PsipattSEXP, SEXP maxincrementSEXP, SEXP modtypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Fval(FvalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Pval(PvalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Fpatt(FpattSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Ppatt(PpattSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b0jk(b0jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b1jk(b1jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b2jk(b2jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b3jk(b3jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type wgtm(wgtmSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type pm(pmSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Psival(PsivalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Psipatt(PsipattSEXP);
    Rcpp::traits::input_parameter< double >::type maxincrement(maxincrementSEXP);
    Rcpp::traits::input_parameter< int >::type modtype(modtypeSEXP);
    rcpp_result_gen = Rcpp::wrap(noharm_estFcpp(Fval, Pval, Fpatt, Ppatt, I, D, b0jk, b1jk, b2jk, b3jk, wgtm, pm, Psival, Psipatt, maxincrement, modtype));
    return rcpp_result_gen;
END_RCPP
}
// noharm_estPcpp
Rcpp::List noharm_estPcpp(Rcpp::NumericMatrix Fval, Rcpp::NumericMatrix Pval, Rcpp::NumericMatrix Fpatt, Rcpp::NumericMatrix Ppatt, int I, int D, Rcpp::NumericMatrix b0jk, Rcpp::NumericMatrix b1jk, Rcpp::NumericMatrix b2jk, Rcpp::NumericMatrix b3jk, Rcpp::NumericMatrix wgtm, Rcpp::NumericMatrix pm, Rcpp::NumericMatrix Psival, Rcpp::NumericMatrix Psipatt, double maxincrement, int modtype);
RcppExport SEXP _sirt_noharm_estPcpp(SEXP FvalSEXP, SEXP PvalSEXP, SEXP FpattSEXP, SEXP PpattSEXP, SEXP ISEXP, SEXP DSEXP, SEXP b0jkSEXP, SEXP b1jkSEXP, SEXP b2jkSEXP, SEXP b3jkSEXP, SEXP wgtmSEXP, SEXP pmSEXP, SEXP PsivalSEXP, SEXP PsipattSEXP, SEXP maxincrementSEXP, SEXP modtypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Fval(FvalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Pval(PvalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Fpatt(FpattSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Ppatt(PpattSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b0jk(b0jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b1jk(b1jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b2jk(b2jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b3jk(b3jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type wgtm(wgtmSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type pm(pmSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Psival(PsivalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Psipatt(PsipattSEXP);
    Rcpp::traits::input_parameter< double >::type maxincrement(maxincrementSEXP);
    Rcpp::traits::input_parameter< int >::type modtype(modtypeSEXP);
    rcpp_result_gen = Rcpp::wrap(noharm_estPcpp(Fval, Pval, Fpatt, Ppatt, I, D, b0jk, b1jk, b2jk, b3jk, wgtm, pm, Psival, Psipatt, maxincrement, modtype));
    return rcpp_result_gen;
END_RCPP
}
// noharm_estPsicpp
Rcpp::List noharm_estPsicpp(Rcpp::NumericMatrix Fval, Rcpp::NumericMatrix Pval, Rcpp::NumericMatrix Fpatt, Rcpp::NumericMatrix Ppatt, int I, int D, Rcpp::NumericMatrix b0jk, Rcpp::NumericMatrix b1jk, Rcpp::NumericMatrix b2jk, Rcpp::NumericMatrix b3jk, Rcpp::NumericMatrix wgtm, Rcpp::NumericMatrix pm, Rcpp::NumericMatrix Psival, Rcpp::NumericMatrix Psipatt, double maxincrement, int modtype);
RcppExport SEXP _sirt_noharm_estPsicpp(SEXP FvalSEXP, SEXP PvalSEXP, SEXP FpattSEXP, SEXP PpattSEXP, SEXP ISEXP, SEXP DSEXP, SEXP b0jkSEXP, SEXP b1jkSEXP, SEXP b2jkSEXP, SEXP b3jkSEXP, SEXP wgtmSEXP, SEXP pmSEXP, SEXP PsivalSEXP, SEXP PsipattSEXP, SEXP maxincrementSEXP, SEXP modtypeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Fval(FvalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Pval(PvalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Fpatt(FpattSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Ppatt(PpattSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b0jk(b0jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b1jk(b1jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b2jk(b2jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type b3jk(b3jkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type wgtm(wgtmSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type pm(pmSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Psival(PsivalSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Psipatt(PsipattSEXP);
    Rcpp::traits::input_parameter< double >::type maxincrement(maxincrementSEXP);
    Rcpp::traits::input_parameter< int >::type modtype(modtypeSEXP);
    rcpp_result_gen = Rcpp::wrap(noharm_estPsicpp(Fval, Pval, Fpatt, Ppatt, I, D, b0jk, b1jk, b2jk, b3jk, wgtm, pm, Psival, Psipatt, maxincrement, modtype));
    return rcpp_result_gen;
END_RCPP
}
// pbivnorm2_rcpp
Rcpp::NumericVector pbivnorm2_rcpp(Rcpp::NumericVector x_, Rcpp::NumericVector y_, Rcpp::NumericVector rho_);
RcppExport SEXP _sirt_pbivnorm2_rcpp(SEXP x_SEXP, SEXP y_SEXP, SEXP rho_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x_(x_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rho_(rho_SEXP);
    rcpp_result_gen = Rcpp::wrap(pbivnorm2_rcpp(x_, y_, rho_));
    return rcpp_result_gen;
END_RCPP
}
// dmvnorm_2dim_rcpp
Rcpp::NumericVector dmvnorm_2dim_rcpp(Rcpp::NumericVector x_, Rcpp::NumericVector y_, Rcpp::NumericVector rho_);
RcppExport SEXP _sirt_dmvnorm_2dim_rcpp(SEXP x_SEXP, SEXP y_SEXP, SEXP rho_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x_(x_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type y_(y_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rho_(rho_SEXP);
    rcpp_result_gen = Rcpp::wrap(dmvnorm_2dim_rcpp(x_, y_, rho_));
    return rcpp_result_gen;
END_RCPP
}
// polychoric2_estequation
Rcpp::NumericVector polychoric2_estequation(Rcpp::NumericMatrix frtab, int maxK, Rcpp::NumericVector rho, Rcpp::NumericVector thresh1n, Rcpp::NumericVector thresh2n, int maxK1, int maxK2);
RcppExport SEXP _sirt_polychoric2_estequation(SEXP frtabSEXP, SEXP maxKSEXP, SEXP rhoSEXP, SEXP thresh1nSEXP, SEXP thresh2nSEXP, SEXP maxK1SEXP, SEXP maxK2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type frtab(frtabSEXP);
    Rcpp::traits::input_parameter< int >::type maxK(maxKSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type thresh1n(thresh1nSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type thresh2n(thresh2nSEXP);
    Rcpp::traits::input_parameter< int >::type maxK1(maxK1SEXP);
    Rcpp::traits::input_parameter< int >::type maxK2(maxK2SEXP);
    rcpp_result_gen = Rcpp::wrap(polychoric2_estequation(frtab, maxK, rho, thresh1n, thresh2n, maxK1, maxK2));
    return rcpp_result_gen;
END_RCPP
}
// polychoric2_itempair
Rcpp::List polychoric2_itempair(Rcpp::NumericVector v1, Rcpp::NumericVector v2, int maxK, int maxiter);
RcppExport SEXP _sirt_polychoric2_itempair(SEXP v1SEXP, SEXP v2SEXP, SEXP maxKSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type v1(v1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type v2(v2SEXP);
    Rcpp::traits::input_parameter< int >::type maxK(maxKSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(polychoric2_itempair(v1, v2, maxK, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// tetrachoric2_rcpp_aux
Rcpp::NumericVector tetrachoric2_rcpp_aux(Rcpp::NumericMatrix dfr, double numdiffparm, int maxiter);
RcppExport SEXP _sirt_tetrachoric2_rcpp_aux(SEXP dfrSEXP, SEXP numdiffparmSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dfr(dfrSEXP);
    Rcpp::traits::input_parameter< double >::type numdiffparm(numdiffparmSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(tetrachoric2_rcpp_aux(dfr, numdiffparm, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// polychoric2_aux_rcpp
Rcpp::List polychoric2_aux_rcpp(Rcpp::NumericMatrix dat, int maxK, int maxiter);
RcppExport SEXP _sirt_polychoric2_aux_rcpp(SEXP datSEXP, SEXP maxKSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< int >::type maxK(maxKSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(polychoric2_aux_rcpp(dat, maxK, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// probs_pcm_groups_C
Rcpp::List probs_pcm_groups_C(Rcpp::NumericMatrix dat, Rcpp::NumericMatrix dat_resp, Rcpp::NumericVector group, Rcpp::NumericMatrix probs, int CC, int TP);
RcppExport SEXP _sirt_probs_pcm_groups_C(SEXP datSEXP, SEXP dat_respSEXP, SEXP groupSEXP, SEXP probsSEXP, SEXP CCSEXP, SEXP TPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat_resp(dat_respSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type group(groupSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type probs(probsSEXP);
    Rcpp::traits::input_parameter< int >::type CC(CCSEXP);
    Rcpp::traits::input_parameter< int >::type TP(TPSEXP);
    rcpp_result_gen = Rcpp::wrap(probs_pcm_groups_C(dat, dat_resp, group, probs, CC, TP));
    return rcpp_result_gen;
END_RCPP
}
// probs_pcm_nogroups_C
Rcpp::List probs_pcm_nogroups_C(Rcpp::NumericMatrix dat, Rcpp::NumericMatrix dat_resp, Rcpp::NumericMatrix probs, int CC, int TP);
RcppExport SEXP _sirt_probs_pcm_nogroups_C(SEXP datSEXP, SEXP dat_respSEXP, SEXP probsSEXP, SEXP CCSEXP, SEXP TPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat_resp(dat_respSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type probs(probsSEXP);
    Rcpp::traits::input_parameter< int >::type CC(CCSEXP);
    Rcpp::traits::input_parameter< int >::type TP(TPSEXP);
    rcpp_result_gen = Rcpp::wrap(probs_pcm_nogroups_C(dat, dat_resp, probs, CC, TP));
    return rcpp_result_gen;
END_RCPP
}
// calccounts_pcm_groups_C
Rcpp::List calccounts_pcm_groups_C(Rcpp::NumericMatrix dat, Rcpp::NumericMatrix dat_resp, Rcpp::NumericVector group, Rcpp::NumericMatrix fyiqk, Rcpp::NumericMatrix pik, int CC, Rcpp::NumericVector weights);
RcppExport SEXP _sirt_calccounts_pcm_groups_C(SEXP datSEXP, SEXP dat_respSEXP, SEXP groupSEXP, SEXP fyiqkSEXP, SEXP pikSEXP, SEXP CCSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat_resp(dat_respSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type group(groupSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type fyiqk(fyiqkSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type pik(pikSEXP);
    Rcpp::traits::input_parameter< int >::type CC(CCSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(calccounts_pcm_groups_C(dat, dat_resp, group, fyiqk, pik, CC, weights));
    return rcpp_result_gen;
END_RCPP
}
// rm_proc_datasets_na_indicators
Rcpp::List rm_proc_datasets_na_indicators(Rcpp::NumericMatrix dat, int K);
RcppExport SEXP _sirt_rm_proc_datasets_na_indicators(SEXP datSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(rm_proc_datasets_na_indicators(dat, K));
    return rcpp_result_gen;
END_RCPP
}
// rm_proc_expand_dataset
Rcpp::NumericMatrix rm_proc_expand_dataset(Rcpp::NumericMatrix dat, Rcpp::IntegerVector rater0, Rcpp::IntegerVector pid0, int N, int R);
RcppExport SEXP _sirt_rm_proc_expand_dataset(SEXP datSEXP, SEXP rater0SEXP, SEXP pid0SEXP, SEXP NSEXP, SEXP RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type rater0(rater0SEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type pid0(pid0SEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    rcpp_result_gen = Rcpp::wrap(rm_proc_expand_dataset(dat, rater0, pid0, N, R));
    return rcpp_result_gen;
END_RCPP
}
// rm_arraymult1
Rcpp::NumericMatrix rm_arraymult1(Rcpp::NumericMatrix AA, Rcpp::NumericVector dimAA, Rcpp::NumericMatrix BB, Rcpp::NumericVector dimBB);
RcppExport SEXP _sirt_rm_arraymult1(SEXP AASEXP, SEXP dimAASEXP, SEXP BBSEXP, SEXP dimBBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type AA(AASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type dimAA(dimAASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type BB(BBSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type dimBB(dimBBSEXP);
    rcpp_result_gen = Rcpp::wrap(rm_arraymult1(AA, dimAA, BB, dimBB));
    return rcpp_result_gen;
END_RCPP
}
// RM_CALCPOST
Rcpp::List RM_CALCPOST(Rcpp::NumericMatrix DAT2, Rcpp::NumericMatrix DAT2RESP, Rcpp::NumericMatrix PROBS, Rcpp::NumericVector KK);
RcppExport SEXP _sirt_RM_CALCPOST(SEXP DAT2SEXP, SEXP DAT2RESPSEXP, SEXP PROBSSEXP, SEXP KKSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2(DAT2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2RESP(DAT2RESPSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type PROBS(PROBSSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type KK(KKSEXP);
    rcpp_result_gen = Rcpp::wrap(RM_CALCPOST(DAT2, DAT2RESP, PROBS, KK));
    return rcpp_result_gen;
END_RCPP
}
// rm_probraterfct1
Rcpp::List rm_probraterfct1(Rcpp::NumericMatrix CRA, Rcpp::NumericVector DRA, Rcpp::IntegerVector dimAA, Rcpp::NumericMatrix BB, Rcpp::IntegerVector dimBB);
RcppExport SEXP _sirt_rm_probraterfct1(SEXP CRASEXP, SEXP DRASEXP, SEXP dimAASEXP, SEXP BBSEXP, SEXP dimBBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type CRA(CRASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type DRA(DRASEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type dimAA(dimAASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type BB(BBSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type dimBB(dimBBSEXP);
    rcpp_result_gen = Rcpp::wrap(rm_probraterfct1(CRA, DRA, dimAA, BB, dimBB));
    return rcpp_result_gen;
END_RCPP
}
// rm_facets_calcprobs_cpp
Rcpp::NumericMatrix rm_facets_calcprobs_cpp(Rcpp::NumericVector b_item, Rcpp::NumericVector b_rater, Rcpp::NumericMatrix Qmatrix, Rcpp::NumericMatrix tau_item, int K, int I, int TP, Rcpp::NumericVector a_item, Rcpp::NumericVector a_rater, Rcpp::NumericVector item_index, Rcpp::NumericVector rater_index, Rcpp::NumericVector theta_k);
RcppExport SEXP _sirt_rm_facets_calcprobs_cpp(SEXP b_itemSEXP, SEXP b_raterSEXP, SEXP QmatrixSEXP, SEXP tau_itemSEXP, SEXP KSEXP, SEXP ISEXP, SEXP TPSEXP, SEXP a_itemSEXP, SEXP a_raterSEXP, SEXP item_indexSEXP, SEXP rater_indexSEXP, SEXP theta_kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b_item(b_itemSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b_rater(b_raterSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type Qmatrix(QmatrixSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type tau_item(tau_itemSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type I(ISEXP);
    Rcpp::traits::input_parameter< int >::type TP(TPSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a_item(a_itemSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type a_rater(a_raterSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type item_index(item_indexSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rater_index(rater_indexSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type theta_k(theta_kSEXP);
    rcpp_result_gen = Rcpp::wrap(rm_facets_calcprobs_cpp(b_item, b_rater, Qmatrix, tau_item, K, I, TP, a_item, a_rater, item_index, rater_index, theta_k));
    return rcpp_result_gen;
END_RCPP
}
// SMIRT_CALCPOST
Rcpp::List SMIRT_CALCPOST(Rcpp::IntegerMatrix DAT2, Rcpp::IntegerMatrix DAT2RESP, Rcpp::NumericMatrix PROBS, Rcpp::NumericMatrix DAT2IND, Rcpp::NumericVector PIK, Rcpp::NumericVector KK1);
RcppExport SEXP _sirt_SMIRT_CALCPOST(SEXP DAT2SEXP, SEXP DAT2RESPSEXP, SEXP PROBSSEXP, SEXP DAT2INDSEXP, SEXP PIKSEXP, SEXP KK1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type DAT2(DAT2SEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type DAT2RESP(DAT2RESPSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type PROBS(PROBSSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2IND(DAT2INDSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type PIK(PIKSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type KK1(KK1SEXP);
    rcpp_result_gen = Rcpp::wrap(SMIRT_CALCPOST(DAT2, DAT2RESP, PROBS, DAT2IND, PIK, KK1));
    return rcpp_result_gen;
END_RCPP
}
// SMIRT_CALCPROB_COMP
Rcpp::NumericMatrix SMIRT_CALCPROB_COMP(Rcpp::NumericMatrix A, Rcpp::NumericVector B, Rcpp::NumericMatrix QQ, Rcpp::NumericMatrix THETA, Rcpp::NumericVector CC, Rcpp::NumericVector DD);
RcppExport SEXP _sirt_SMIRT_CALCPROB_COMP(SEXP ASEXP, SEXP BSEXP, SEXP QQSEXP, SEXP THETASEXP, SEXP CCSEXP, SEXP DDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type B(BSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type QQ(QQSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type THETA(THETASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type CC(CCSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type DD(DDSEXP);
    rcpp_result_gen = Rcpp::wrap(SMIRT_CALCPROB_COMP(A, B, QQ, THETA, CC, DD));
    return rcpp_result_gen;
END_RCPP
}
// SMIRT_CALCPROB_NONCOMP
Rcpp::NumericMatrix SMIRT_CALCPROB_NONCOMP(Rcpp::NumericMatrix A, Rcpp::NumericMatrix B, Rcpp::NumericMatrix QQ, Rcpp::NumericMatrix THETA, Rcpp::NumericVector CC, Rcpp::NumericVector DD);
RcppExport SEXP _sirt_SMIRT_CALCPROB_NONCOMP(SEXP ASEXP, SEXP BSEXP, SEXP QQSEXP, SEXP THETASEXP, SEXP CCSEXP, SEXP DDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type QQ(QQSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type THETA(THETASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type CC(CCSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type DD(DDSEXP);
    rcpp_result_gen = Rcpp::wrap(SMIRT_CALCPROB_NONCOMP(A, B, QQ, THETA, CC, DD));
    return rcpp_result_gen;
END_RCPP
}
// SMIRT_CALCPROB_PARTCOMP
Rcpp::NumericMatrix SMIRT_CALCPROB_PARTCOMP(Rcpp::NumericMatrix A, Rcpp::NumericMatrix B, Rcpp::NumericMatrix QQ, Rcpp::NumericMatrix THETA, Rcpp::NumericVector CC, Rcpp::NumericVector DD, Rcpp::NumericVector MUI);
RcppExport SEXP _sirt_SMIRT_CALCPROB_PARTCOMP(SEXP ASEXP, SEXP BSEXP, SEXP QQSEXP, SEXP THETASEXP, SEXP CCSEXP, SEXP DDSEXP, SEXP MUISEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type B(BSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type QQ(QQSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type THETA(THETASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type CC(CCSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type DD(DDSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type MUI(MUISEXP);
    rcpp_result_gen = Rcpp::wrap(SMIRT_CALCPROB_PARTCOMP(A, B, QQ, THETA, CC, DD, MUI));
    return rcpp_result_gen;
END_RCPP
}
// MML2_RASCHTYPE_COUNTS
Rcpp::List MML2_RASCHTYPE_COUNTS(Rcpp::NumericMatrix DAT2, Rcpp::NumericMatrix DAT2RESP, Rcpp::NumericVector DAT1, Rcpp::NumericMatrix FQKYI, Rcpp::NumericVector PIK, Rcpp::NumericMatrix FYIQK);
RcppExport SEXP _sirt_MML2_RASCHTYPE_COUNTS(SEXP DAT2SEXP, SEXP DAT2RESPSEXP, SEXP DAT1SEXP, SEXP FQKYISEXP, SEXP PIKSEXP, SEXP FYIQKSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2(DAT2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2RESP(DAT2RESPSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type DAT1(DAT1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type FQKYI(FQKYISEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type PIK(PIKSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type FYIQK(FYIQKSEXP);
    rcpp_result_gen = Rcpp::wrap(MML2_RASCHTYPE_COUNTS(DAT2, DAT2RESP, DAT1, FQKYI, PIK, FYIQK));
    return rcpp_result_gen;
END_RCPP
}
// MML2_CALCPOST_V1
Rcpp::List MML2_CALCPOST_V1(Rcpp::NumericMatrix DAT2, Rcpp::NumericMatrix DAT2RESP, Rcpp::NumericMatrix PROBS);
RcppExport SEXP _sirt_MML2_CALCPOST_V1(SEXP DAT2SEXP, SEXP DAT2RESPSEXP, SEXP PROBSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2(DAT2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2RESP(DAT2RESPSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type PROBS(PROBSSEXP);
    rcpp_result_gen = Rcpp::wrap(MML2_CALCPOST_V1(DAT2, DAT2RESP, PROBS));
    return rcpp_result_gen;
END_RCPP
}
// MML2_CALCPOST_V2
Rcpp::List MML2_CALCPOST_V2(Rcpp::NumericMatrix DAT2, Rcpp::NumericMatrix DAT2RESP, Rcpp::NumericMatrix PROBS);
RcppExport SEXP _sirt_MML2_CALCPOST_V2(SEXP DAT2SEXP, SEXP DAT2RESPSEXP, SEXP PROBSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2(DAT2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2RESP(DAT2RESPSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type PROBS(PROBSSEXP);
    rcpp_result_gen = Rcpp::wrap(MML2_CALCPOST_V2(DAT2, DAT2RESP, PROBS));
    return rcpp_result_gen;
END_RCPP
}
// MML2_CALCPOST_V3
Rcpp::List MML2_CALCPOST_V3(Rcpp::NumericMatrix DAT2, Rcpp::NumericMatrix DAT2RESP, Rcpp::NumericMatrix PROBS);
RcppExport SEXP _sirt_MML2_CALCPOST_V3(SEXP DAT2SEXP, SEXP DAT2RESPSEXP, SEXP PROBSSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2(DAT2SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type DAT2RESP(DAT2RESPSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type PROBS(PROBSSEXP);
    rcpp_result_gen = Rcpp::wrap(MML2_CALCPOST_V3(DAT2, DAT2RESP, PROBS));
    return rcpp_result_gen;
END_RCPP
}
// xxirt_compute_posterior_expected_counts
Rcpp::NumericMatrix xxirt_compute_posterior_expected_counts(Rcpp::NumericMatrix dat1_resp_gg, Rcpp::NumericMatrix p_aj_xi_gg);
RcppExport SEXP _sirt_xxirt_compute_posterior_expected_counts(SEXP dat1_resp_ggSEXP, SEXP p_aj_xi_ggSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type dat1_resp_gg(dat1_resp_ggSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type p_aj_xi_gg(p_aj_xi_ggSEXP);
    rcpp_result_gen = Rcpp::wrap(xxirt_compute_posterior_expected_counts(dat1_resp_gg, p_aj_xi_gg));
    return rcpp_result_gen;
END_RCPP
}
// xxirt_compute_likelihood_helper
Rcpp::NumericMatrix xxirt_compute_likelihood_helper(Rcpp::IntegerMatrix dat, Rcpp::IntegerMatrix dat_resp, Rcpp::NumericMatrix probs, int TP, int maxK);
RcppExport SEXP _sirt_xxirt_compute_likelihood_helper(SEXP datSEXP, SEXP dat_respSEXP, SEXP probsSEXP, SEXP TPSEXP, SEXP maxKSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type dat(datSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type dat_resp(dat_respSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type probs(probsSEXP);
    Rcpp::traits::input_parameter< int >::type TP(TPSEXP);
    Rcpp::traits::input_parameter< int >::type maxK(maxKSEXP);
    rcpp_result_gen = Rcpp::wrap(xxirt_compute_likelihood_helper(dat, dat_resp, probs, TP, maxK));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sirt_eigenvaluesDsirt", (DL_FUNC) &_sirt_eigenvaluesDsirt, 4},
    {"_sirt_firsteigenvalsirt2", (DL_FUNC) &_sirt_firsteigenvalsirt2, 4},
    {"_sirt_parameters_jackknife", (DL_FUNC) &_sirt_parameters_jackknife, 1},
    {"_sirt_evm_aux", (DL_FUNC) &_sirt_evm_aux, 6},
    {"_sirt_choppin_rowaveraging", (DL_FUNC) &_sirt_choppin_rowaveraging, 3},
    {"_sirt_evm_comp_matrix_poly", (DL_FUNC) &_sirt_evm_comp_matrix_poly, 9},
    {"_sirt_gooijer_csn_table", (DL_FUNC) &_sirt_gooijer_csn_table, 7},
    {"_sirt_isop_tests_C", (DL_FUNC) &_sirt_isop_tests_C, 5},
    {"_sirt_ia_optim_lambda", (DL_FUNC) &_sirt_ia_optim_lambda, 8},
    {"_sirt_ia_optim_nu", (DL_FUNC) &_sirt_ia_optim_nu, 11},
    {"_sirt_interval_index_C", (DL_FUNC) &_sirt_interval_index_C, 2},
    {"_sirt_rowCumsums2_source", (DL_FUNC) &_sirt_rowCumsums2_source, 1},
    {"_sirt_rowKSmallest_C", (DL_FUNC) &_sirt_rowKSmallest_C, 4},
    {"_sirt_rowMaxsCPP_source", (DL_FUNC) &_sirt_rowMaxsCPP_source, 1},
    {"_sirt_rowmins2_bundle_C", (DL_FUNC) &_sirt_rowmins2_bundle_C, 2},
    {"_sirt_calc_copula_itemcluster_C", (DL_FUNC) &_sirt_calc_copula_itemcluster_C, 2},
    {"_sirt_md_pattern_csource", (DL_FUNC) &_sirt_md_pattern_csource, 1},
    {"_sirt_monoreg_rowwise_Cpp", (DL_FUNC) &_sirt_monoreg_rowwise_Cpp, 2},
    {"_sirt_mle_pcm_group_C", (DL_FUNC) &_sirt_mle_pcm_group_C, 9},
    {"_sirt_mle_pcm_C", (DL_FUNC) &_sirt_mle_pcm_C, 8},
    {"_sirt_noharm_compute_dj", (DL_FUNC) &_sirt_noharm_compute_dj, 4},
    {"_sirt_noharm_compute_ej", (DL_FUNC) &_sirt_noharm_compute_ej, 2},
    {"_sirt_noharm_compute_vjk", (DL_FUNC) &_sirt_noharm_compute_vjk, 7},
    {"_sirt_noharm_compute_gammajk", (DL_FUNC) &_sirt_noharm_compute_gammajk, 5},
    {"_sirt_noharm_compute_pdfk", (DL_FUNC) &_sirt_noharm_compute_pdfk, 4},
    {"_sirt_noharm_estFcpp", (DL_FUNC) &_sirt_noharm_estFcpp, 16},
    {"_sirt_noharm_estPcpp", (DL_FUNC) &_sirt_noharm_estPcpp, 16},
    {"_sirt_noharm_estPsicpp", (DL_FUNC) &_sirt_noharm_estPsicpp, 16},
    {"_sirt_pbivnorm2_rcpp", (DL_FUNC) &_sirt_pbivnorm2_rcpp, 3},
    {"_sirt_dmvnorm_2dim_rcpp", (DL_FUNC) &_sirt_dmvnorm_2dim_rcpp, 3},
    {"_sirt_polychoric2_estequation", (DL_FUNC) &_sirt_polychoric2_estequation, 7},
    {"_sirt_polychoric2_itempair", (DL_FUNC) &_sirt_polychoric2_itempair, 4},
    {"_sirt_tetrachoric2_rcpp_aux", (DL_FUNC) &_sirt_tetrachoric2_rcpp_aux, 3},
    {"_sirt_polychoric2_aux_rcpp", (DL_FUNC) &_sirt_polychoric2_aux_rcpp, 3},
    {"_sirt_probs_pcm_groups_C", (DL_FUNC) &_sirt_probs_pcm_groups_C, 6},
    {"_sirt_probs_pcm_nogroups_C", (DL_FUNC) &_sirt_probs_pcm_nogroups_C, 5},
    {"_sirt_calccounts_pcm_groups_C", (DL_FUNC) &_sirt_calccounts_pcm_groups_C, 7},
    {"_sirt_rm_proc_datasets_na_indicators", (DL_FUNC) &_sirt_rm_proc_datasets_na_indicators, 2},
    {"_sirt_rm_proc_expand_dataset", (DL_FUNC) &_sirt_rm_proc_expand_dataset, 5},
    {"_sirt_rm_arraymult1", (DL_FUNC) &_sirt_rm_arraymult1, 4},
    {"_sirt_RM_CALCPOST", (DL_FUNC) &_sirt_RM_CALCPOST, 4},
    {"_sirt_rm_probraterfct1", (DL_FUNC) &_sirt_rm_probraterfct1, 5},
    {"_sirt_rm_facets_calcprobs_cpp", (DL_FUNC) &_sirt_rm_facets_calcprobs_cpp, 12},
    {"_sirt_SMIRT_CALCPOST", (DL_FUNC) &_sirt_SMIRT_CALCPOST, 6},
    {"_sirt_SMIRT_CALCPROB_COMP", (DL_FUNC) &_sirt_SMIRT_CALCPROB_COMP, 6},
    {"_sirt_SMIRT_CALCPROB_NONCOMP", (DL_FUNC) &_sirt_SMIRT_CALCPROB_NONCOMP, 6},
    {"_sirt_SMIRT_CALCPROB_PARTCOMP", (DL_FUNC) &_sirt_SMIRT_CALCPROB_PARTCOMP, 7},
    {"_sirt_MML2_RASCHTYPE_COUNTS", (DL_FUNC) &_sirt_MML2_RASCHTYPE_COUNTS, 6},
    {"_sirt_MML2_CALCPOST_V1", (DL_FUNC) &_sirt_MML2_CALCPOST_V1, 3},
    {"_sirt_MML2_CALCPOST_V2", (DL_FUNC) &_sirt_MML2_CALCPOST_V2, 3},
    {"_sirt_MML2_CALCPOST_V3", (DL_FUNC) &_sirt_MML2_CALCPOST_V3, 3},
    {"_sirt_xxirt_compute_posterior_expected_counts", (DL_FUNC) &_sirt_xxirt_compute_posterior_expected_counts, 2},
    {"_sirt_xxirt_compute_likelihood_helper", (DL_FUNC) &_sirt_xxirt_compute_likelihood_helper, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_sirt(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
